services:
  api:
    container_name: go-api
    build:
      context: .
      dockerfile: Dockerfile
    image: go-api
    ports:
      - 8080:8080
    env_file:
      - .env.example
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - REDIS_URI=redis:6379
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - path: .
          action: rebuild

  mongo:
    container_name: go-mongodb
    image: mongo:8.0.0
    volumes:  
      - mongodbdata:/data/db
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "pgrep", "mongod"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis:
    container_name: go-redis
    image: redis:7.4
    volumes:
      - redisdata:/data
    ports:
      - 6379:6379 
    networks:
      - go-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
      
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.55.0
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - go-network
  
  grafana:
    container_name: grafana
    image: grafana/grafana:11.3.0
    volumes:
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - go-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password

volumes:
  mongodbdata:
  redisdata:
  grafana-data:

networks:
  go-network:
    driver: bridge
